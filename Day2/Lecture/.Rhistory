a <- 1
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
hook_output <- knit_hooks$get("output")
knit_hooks$set(output = function(x, options) {
lines <- options$output.lines
if (is.null(lines)) {
return(hook_output(x, options))  # pass to default hook
}
x <- unlist(strsplit(x, "\n"))
more <- "..."
if (length(lines)==1) {        # first n lines
if (length(x) > lines) {
# truncate the output, but add ....
x <- c(head(x, lines), more)
}
} else {
x <- c(more, x[lines], more)
}
# paste these lines together
x <- paste(c(x, ""), collapse = "\n")
hook_output(x, options)
})
a <- 1
a <- 1
getwd()
setwd("/Users/ysui/Desktop/R_Camp/Day2")
list.files()
# This creates a new directory inside the current directory at path = /Users/ysui/Desktop/R_Camp/Day2
dir.create("./pset2")
# This sets the new working directory to pset2 created above.
setwd("/Users/ysui/Desktop/R_Camp/Day2/pset2")
getwd()
# This sets the new working directory to pset2 created above.
setwd("/Users/ysui/Desktop/RCamp2022/Day2/Lecture")
# This creates a new directory inside the current directory at path = /Users/ysui/Desktop/R_Camp/Day2
dir.create("./pset2")
# This sets the new working directory to pset2 created above.
setwd("/Users/ysui/Desktop/RCamp2022/Day2/Lecture/pset2")
# This creates a new directory inside the current directory at path = /Users/ysui/Desktop/R_Camp/Day2
dir.create("./pset2")
# This sets the new working directory to pset2 created above.
setwd("/Users/ysui/Desktop/RCamp2022/Day2/Lecture")
# This sets the new working directory to pset2 created above.
setwd("/Users/ysui/Desktop/RCamp2022/Day2/Lecture")
library(datasets)
help(package = "datasets")
help(package = "datasets")
iris
mtcars
summary(iris)
school_loc <- read.csv("school_loc.csv")
school_loc <- read.csv("school_loc.csv")
View(school_loc)
colnames(school_loc)
rownames(school_loc)
school_loc <- read.csv("https://data-nces.opendata.arcgis.com/datasets/a15e8731a17a46aabc452ea607f172c0_0.csv?outSR=%7B%22latestWkid%22%3A4269%2C%22wkid%22%3A4269%7D")
View(school_loc)
school_loc <- readRDS("school_locations.RDS")
load("file.RData")
a <- 1
b <- 2
c <- 3
save(a, b, c, file = "stuff.RData")
load("stuff.RData")
a
b
c
saveRDS(a, file = "stuff.RDS")
saveRDS(a, b, c, file = "stuff.RDS")
saveRDS(a, file = "stuff.RDS")
a <- readRDS("stuff.RDS")
# write.csv(r_object, file = filepath, row.names = FALSE)
write.csv(school_loc, "data/school_loc.csv", row.names = FALSE)
# write.csv(r_object, file = filepath, row.names = FALSE)
write.csv(school_loc, "school_loc.csv", row.names = FALSE)
typeof(school_loc)
class(school_loc)
school_loc[ , ]
head(school_loc)
tail(school_loc)
# View(school_loc)
school_loc[1,1]
school_loc[1, c(1,2,3)]
newdf <- school_loc[1, c(1,2,3)]
newdf
View(newdf)
school_loc[c(1,1), c(1,2,3)]
vec <- c(2,4,6,8,10)
vec[1:3]
1:3
school_loc[1:2,1:2]
school_loc[1:2, 1]
school_loc[1:2, 1, drop = FALSE]
school_loc[-1, 1:3]
school_loc[-(2:52), 1:3]
school_loc[-1, 1:3]
school_loc[-(2:52), 1:3]
school_loc[c(-1, 1), 1]
school_loc[c(-1, -2), 1]
school_loc[c(-1, 1), 1]
school_loc[-1, 1]
school_loc[-1, 1]
school_loc[-1, 1]
# school_loc[-1, 1]
# data frame with 0 columns and 0 rows
school_loc[0, 0]
# data frame with 0 columns and 0 rows
school_loc[0, 0]
# data frame with 0 columns and 0 rows
school_loc[1, 1]
# data frame with 0 columns and 0 rows
school_loc[0, 0]
# This extracts the first row
school_loc[1,]
# This extracts the first column
school_loc[,1]
dim(school_loc) # [1] 7012   26
# You can use the multiplication symbol here as a shortcut to the FALSEs.
school_loc[1, c(TRUE, TRUE, FALSE * 24)]
# You can use the multiplication symbol here as a shortcut to the FALSEs.
school_loc[1, c(TRUE, TRUE, FALSE * 24)]
school_loc[1,]
# You can use the multiplication symbol here as a shortcut to the FALSEs.
school_loc[1, c(TRUE, TRUE, FALSE * 24)]
school_loc[1, c(TRUE, TRUE, FALSE, TRUE, FALSE * 22)]
as.integer(TRUE)
as.integer(TRUE)
as.integer(FALSE)
as.logical(1)
as.logical(100)
as.logical(-1)
as.logical(0)
# If you do not remember the exact names of each column,
# you can first use the function colnames() to list all the column names.
colnames(school_loc)
school_loc[1:10, c("X", "Y", "NAME", "SCHOOLYEAR")]
school_loc[1:10, c("X", "Y", "NAME", "SCHOOLYEAR")]
school_loc[100,]
school_loc[1:10,]
school_loc[c(1:10),]
school_loc[1:10,]
school_loc[c(1:10),]
# For illustration purpose, I will just use a subset of the original school location dataset.
sub_school_loc <- school_loc[1:10,]
sub_school_loc$NAME
mean(school_loc$X)
median(school_loc$Y)
max(school_loc$Y)
l <- list(numbers = c(1, 2), logical = TRUE, strings = c("a", "b", "c"))
l
# And then subset it:
l[1]
l
l$numbers
# And then subset it:
typeof(l[1])
class(l[1])
sum(l[1])
sum(l[1])
l$numbers
l$strings
l$numbers
l[1]
l$numbers
l[1]
l$numbers
l[1]
l$numbers
sum(l$numbers)
sum(l$numbers)
sum(l[1])
sum(l$numbers)
l[[1]]
l[1]
l[[1]]
l[1]
l[[1]]
l[1]
sum(l[[1]])
sum(l[1])
l["numbers"]
typeof(l["numbers"])
l[["numbers"]]
typeof(l[["numbers"]])
l[["numbers"]]
typeof(l[["numbers"]])
sum(l[["numbers"]])
l["numbers"]
typeof(l["numbers"])
sum(l["number"])
sum(l["numbers"])
setwd("~/Desktop/RCamp2022/Day2")
setwd("~/Desktop/RCamp2022/Day2/Lecture")
setwd("~/Desktop/RCamp2022/Day2")
setwd("~/Desktop/RCamp2022/Day2/Lecture")
setwd("~/Desktop/RCamp2022/Day2")
setwd("~/Desktop/RCamp2022/Day2/Lecture")
setwd("~/Desktop/RCamp2022")
setwd("~/Desktop/RCamp2022/Day2/Lecture")
ls
list.files()
vec <- c(1:10)
vec
vec <- c(10:20)
vec
vec <- c(1:10)
vec[1]
vec[1] <- 999
vec
vec[-1] <- 0
vec
vec[c(1, 3, 5)] <- c(1000, 3000, 5000)
vec <- c(1:10)
vec[c(1, 3, 5)] <- c(1000, 3000, 5000)
vec
vec[4:6] <- vec[4:6] + 1
vec
vec[12] <- 0
length(vec)
vec <- c(1:10)
length(vec)
vec[12] <- 0
vec
length(vec)
vec
school_loc$newcol <- 1:7012
View(school_loc)
school_loc$indices <- 1:7012
View(school_loc)
school_loc$newcol <- NULL
View(school_loc)
# View(school_loc)
colnames(school_loc)
school_loc$newcol[c(1,3,5,7,9, 10)] <- c(111, 333, 555, 777, 999)
# To illustrate subsetting values, we add the new variable back.
school_loc$newcol <- 1:7012
# To illustrate subsetting values, we add the new variable back.
school_loc$newcol <- 1:7012
school_loc$newcol[c(1,3,5,7,9)] <- c(111, 333, 555, 777, 999)
View(school_loc)
# If you would like to set them to the same value, simply do:
school_loc$newcol[c(2,4,6,8,10)] <- 0
school_loc[1:10, "newcol"]
# If you would like to set them to the same value, simply do:
school_loc$newcol[c(2,4,6,8,10)] <- 1
school_loc[1:10, "newcol"]
# If you would like to set them to the same value, simply do:
school_loc$newcol[c(2,4,6,8,10)] <- 1000
school_loc[1:10, "newcol"]
View(school_loc)
vec2 <- c(1,0,2,0,3,4,5,0,9)
vec2
vec2[c(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE)]
vec2 <- c(1,0,2,0,3,4,5,0,9)
vec2
vec2[c(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE)]
1 > 2
1 < 2
1 > c(0, 1, 2)
1 > c(0, 1, 2)
c(1, 2, 3) == c(3, 2, 1)
c(1, 2, 3) == c(3, 2, 1)
1 %in% c(3, 4, 5)
c(1, 2) %in% c(3, 4, 5)
c(1, 2, 3) %in% c(3, 4, 5)
c(1, 2, 3, 4) %in% c(3, 4, 5)
a == b
a = b
a== b
colnames(school_loc)
# First extract the column "X"
school_loc$X
# Use the < operator to check whether each value is less than -100
school_loc$X < -100
# Use the sum() function to check how many TRUEs there are
sum(school_loc$X < -100)
# Use the sum() function to check how many TRUEs there are
# TRUE = 1 / FALSE = 0
sum(school_loc$X < -100)
# What does this do?
school_loc$Y[school_loc$X < -100]
# What does this do?
school_loc$Y[school_loc$X < -100] <- 0
# What does this do?
school_loc$Y[school_loc$X < -100]
nrow(TFR)
TFR <- read.csv("dataset.csv")
nrow(TFR)
sum(TFR$TFR > 8)
nrow(TFR$TFR > 8)
TFR$TFR > 8
?nrow
TFR$TFR >8
TFR[TFR$TFR >8]
TFR[TFR$TFR >8]
TFR$TFR > 8
typeof(TFR$TFR > 8)
nrow(TFR[TFR$TFR > 8,])
typeof(TFR[TFR$TFR > 8,])
TFR <- read.csv("dataset.csv")
nrow(TFR[TFR$TFR > 8,])
nrow(TFR[TFR$TFR > 8,])
typeof()
typeof(TFR[TFR$TFR > 8,])
a <- c(1, 2, 3)
b <- c(1, 2, 3)
c <- c(1, 2, 4)
a == b
b == c
a == b & b == c
a == b & b == c
a <- c(1, 2, 3)
b <- c(1, 2, 3)
c <- c(1, 2, 4)
a == b
b == c
a == b & b == c
a == b
b == c
a == b
a == b | b == c
a == b & b == c
z == "Monday"
z <- c("Monday", "Tuesday", "Friday")
z == "Monday"
z == "Monday" | z == "Tuesday"
z == "Monday" | z == "Tuesday"
z == "Monday"
z == "Tuesday"
z == "Monday" | z == "Tuesday"
z == "Monday"
z == "Tuesday"
(TRUE + TRUE) * FALSE
data <- TFR
data[data$Year >= 1950 & data$Year <= 1955,]
data[data$TFR == 7.45 & data$Year > 1960,]
data[c(FALSE,TRUE),]
# 8
data[c(F,T),]
data[c(1,2),]
TFR$index <- 1:dim(TFR)[1]
TFR[TFR$index %% 4 == 0, ]
TFR[TFR$index %% 4 == 0, ]$LifeExpB <- 0
View(TFR)
TFR[TFR$index %% 4 == 0, ]$LifeExpB <- 0
View(TFR)
data <- TFR
# 8
data[c(F,T),]
# 8
data[c(T,F),]
# 8
data[c(F,T),]
View(data)
data <- TFR
# 9
data$LifeExpB[c(F,F,F,T)] <- 0
View(data)
vec
1 + NA
1 + NA
NA == 1
NA == 10
NA == 3.14
c(NA, 1:50)
mean(c(NA, 1:50))
c(NA, 1:50)
mean(c(NA, 1:50), na.rm = TRUE)
mean(c(1:50)) # which returns the same value as above
mean(c(NA, 1:50), na.rm = TRUE)
mean(c(1:50)) # which returns the same value as above
max(c(NA, 1:50), na.rm = TRUE)
max(c(1:50)) # which returns the same value as above
min(c(NA, 1:50), na.rm = TRUE)
min(c(1:50)) # which returns the same value as above
mean(c(NA, 1:50), na.rm = TRUE)
mean(c(1:50)) # which returns the same value as above
NA == NA
c(1, 2, 3, NA) == NA
is.na(NA)
is.na(2)
is.na(0)
vec3 <- c(1, 2, 3, NA)
is.na(vec)
vec3 <- c(1, 2, 3, NA)
is.na(vec3)
# What does this do?
school_loc$ZIP[school_loc$X < -100] <- NA
View(school_loc)
# What does this do?
school_loc$ZIP[school_loc$X < -100] <- NA
View(school_loc)
new_df <- na.omit(school_loc)
summary(new_df)
summary(school_loc)
X <- c (123,0,NA,8,NA,200)
X <- c (123,0,NA,8,NA,200)
X <- c (123,0,NA,8,NA,200)
na.omit(X)
X
na.omit(X)
X
TFR[!is.na(TFR$GDPpc), ]
TFR3 <- TFR[!is.na(TFR$GDPpc), ]
View(TFR3)
getwd()
dir.create("./tmp")
list.files("/Users/ysui/Desktop/RCamp2022/Day2/Lecture/tmp")
knitr::opts_chunk$set(echo = TRUE)
getwd()
dir.create("./Day2")
setwd("/Users/ysui/Desktop/R_Camp/Day2")
list.files()
library(datasets)
df <- USArrests
# View(df)
resources <- read.csv("resources.csv")
dim(resources)
str(resources)
resources[1 , ]
resources[ , 1]
length(resources$regime[resources$regime <= 5 & resources$regime >= -5])
resources$regime[resources$regime <= 5 & resources$regime >= -5]
length(resources$regime[resources$regime <= 5 & resources$regime >= -5], na.rm = TRUE)
resources$regime[resources$regime <= 5 & resources$regime >= -5]
na.omit(resources$regime[resources$regime <= 5 & resources$regime >= -5])
length(na.omit(resources$regime[resources$regime <= 5 & resources$regime >= -5]))
sum(na.omit(resources$regime[resources$regime <= 5 & resources$regime >= -5]))
length(na.omit(resources$regime[resources$regime <= 5 & resources$regime >= -5]))
length(resources$regime[resources$regime <= 5 & resources$regime >= -5])
resources$oil[is.na(resources$oil)] = mean(resources$oil, na.rm = TRUE)
resources <- read.csv("resources.csv")
# View(resources)
summary(resources)
r1 <- resources[resources$year==1980 & resources$life > 76, ]
r1$cty_name
r2 <- resources[resources$year == 1990 & resources$regime == 10, ]
r2$cty_name
resources$life <- as.factor(ifelse(resources$life_expectancy < 50, "low",
ifelse(resources$life_expectancy < 70, "medium",
ifelse(resources$life_expectancy < 100, "high"))))
resources$life <- as.factor(ifelse(resources$life_expectancy < 50, "low",
ifelse(resources$life_expectancy < 70, "medium",
ifelse(resources$life_expectancy < 100, "high"))))
knitr::opts_chunk$set(echo = TRUE)
library(datasets)
df <- USArrests
# View(df)
resources <- read.csv("resources.csv")
# View(resources)
dim(resources)
str(resources)
length(resources$regime[resources$regime <= 5 & resources$regime >= -5])
length(na.omit(resources$regime[resources$regime <= 5 & resources$regime >= -5]))
summary(resources)
resources_na <- na.omit(resources)
dim(resources_na)
summary(resources_na)
resources$oil[is.na(resources$oil)] = mean(resources$oil, na.rm = TRUE)
resources$logGDPcp[is.na(resources$logGDPcp)] = mean(resources$logGDPcp, na.rm = TRUE)
resources$regime[is.na(resources$regime)] = mean(resources$regime, na.rm = TRUE)
resources$metal[is.na(resources$metal)] = mean(resources$metal, na.rm = TRUE)
resources$illit[is.na(resources$illit)] = mean(resources$illit, na.rm = TRUE)
resources$life[is.na(resources$life)] = mean(resources$life, na.rm = TRUE)
summary(resources)
resources[, c("illit")] = NULL
# resources$illit
## NULL
r1 <- resources[resources$year==1980 & resources$life > 76, ]
r1$cty_name
colnames(resources)[7] <- "life_expectancy"
r2 <- resources[resources$year == 1990 & resources$regime == 10, ]
r2$cty_name
resources$life <- as.factor(ifelse(resources$life_expectancy < 50, "low",
ifelse(resources$life_expectancy < 70, "medium",
ifelse(resources$life_expectancy < 100, "high"))))
View(resources)
resources$democracy <- ifelse(resources$regime >= 0, 1, 0)
# View(resources)
r3 <- resources[resources$life == "low" & resources$year == 1990, ]
r3[r3$oil == max(r3$oil),]
resources$life <- as.factor(ifelse(resources$life_expectancy < 50, "low",
ifelse(resources$life_expectancy < 70, "medium",
ifelse(resources$life_expectancy < 100, "high"))))
View(resources)
resources$life <- as.factor(ifelse(resources$life_expectancy < 50, "low",
ifelse(resources$life_expectancy < 70, "medium",
ifelse(resources$life_expectancy < 100, "high"))))
resources$democracy <- ifelse(resources$regime >= 0, 1, 0)
